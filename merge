#!/bin/bash

# usage: merge <source1> <source2> ... <sourceN> <destination>

set -e

#export RENDER_PATH=/groups/mousebrainmicro/mousebrainmicro/Software/barycentric
export RENDER_PATH=/home/arthurb/projects/mouselight
JULIA=/usr/local/julialang-0.3.8/bin/julia

# get vars from parameters.jl file
bill=$($JULIA -L $1/set_parameters.jl -e "print(bill_userid)")

# create a probably-unique job name
jobname=$(cat /dev/urandom | tr -dc 'a-zA-Z' | head -c 7)

# check that all source parameters are equal
for i in $(seq 1 $(($#-1))) ; do
  du -sh ${!i}
  params=$($JULIA -L ${!i}/calculated_parameters.jl -e "print(nlevels,shape_leaf_px,voxelsize_used_um,tile_type)")
  if [ -z ${first_params+x} ] ; then
    first_params=$params
  else
    if [ $params != $first_params ] ; then
      echo ERROR: parameters from source directories are not all equal
      exit 1
    fi
  fi
done

# delete <destination> if it exists
if [ -d ${@: -1} ] ; then
  echo "deleting destination = ${@: -1}"
  rm -rf ${@: -1}
fi
mkdir -p ${@: -1}/merge
df -h ${@: -1}

# do it
sources=$(printf "\"%s\", " ${@:1:(($#-1))})

expr="id=int(ENV[\"SGE_TASK_ID\"]); ch=(id-1)%2+1; oct=(id-1)>>4+1; oct2=((id-1)>>1)%8+1; merge_output_tiles([${sources%%, }], \"${@: -1}\", \"default\", \".\"*string(ch-1)*\".tif\", string(oct)*\"/\"*string(oct2), true, false, false)"
qsub -A $bill -N $jobname -t 1:128 -tc 32 -pe batch 9 -j y -b y -V -shell n -o ${@: -1}/merge/'$TASK_ID'.log \
      $JULIA -L $1/calculated_parameters.jl -L ${RENDER_PATH}/src/render/admin.jl -e "$expr"

expr="id=int(ENV[\"SGE_TASK_ID\"]); ch=(id-129)%2+1; oct=(id-129)>>1+1; merge_output_tiles([${sources%%, }], \"${@: -1}\", \"default\", \".\"*string(ch-1)*\".tif\", string(oct), false, false, false)"
qsub -A $bill -N $jobname -t 129:144 -pe batch 9 -j y -b y -V -shell n -o ${@: -1}/merge/'$TASK_ID'.log \
      $JULIA -L $1/calculated_parameters.jl -L ${RENDER_PATH}/src/render/admin.jl -e "$expr"

expr="id=int(ENV[\"SGE_TASK_ID\"]); ch=(id-145)%2+1; merge_output_tiles([${sources%%, }], \"${@: -1}\", \"default\", \".\"*string(ch-1)*\".tif\", \"\", false, false, false)"
qsub -A $bill -N $jobname -t 145:146 -pe batch 9 -j y -b y -V -shell n -o ${@: -1}/merge/'$TASK_ID'.log \
      $JULIA -L $1/calculated_parameters.jl -L ${RENDER_PATH}/src/render/admin.jl -e "$expr"

# copy metadata and log files
for i in $(seq 1 $(($#-1))) ; do
  mkdir -p ${@: -1}/source$i
  cp ${!i}/*.{log,jl}  ${@: -1}/source$i
done
