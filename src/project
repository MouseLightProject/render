#!/bin/bash

# usage: src/project <copy_of_parameters.jl>

parameters_file=$1

export RENDER_PATH=/groups/mousebrainmicro/mousebrainmicro/Software/barycentric6
export JULIA=/groups/mousebrainmicro/mousebrainmicro/Software/barycentric6/julia-1.7.1/bin/julia

export JULIA_PROJECT=$RENDER_PATH/src/render 

umask 002

# get vars from parameters.jl file
expr="include(\"${RENDER_PATH}/src/render/src/admin.jl\");
      tiles = TileBaseOpen(frompath);
      print(join([bill_userid,frompath,topath,typeof(which_cluster) <: String ? which_cluster : join(which_cluster, ','),throttle,delete_scratch],' '))"
read -a tmp <<< $($JULIA -L $parameters_file -e "$expr")
bill_userid=${tmp[0]}
frompath=${tmp[1]}
topath=${tmp[2]}
which_cluster=${tmp[3]}
throttle=${tmp[4]}
delete_scratch=${tmp[5]}

# get vars from calculated_parameters.jl file
expr="print(nlevels)"
nlevels=$($JULIA -L ${frompath}/calculated_parameters.jl -e "$expr")

if [ -d $topath ] ; then
  echo "deleting topath = $topath"
  rm -rf $topath
fi
mkdir -p $topath/logs

date >> ${topath}/logs/project.log
hostname >> ${topath}/logs/project.log

# copy parameters to <destination>
cp $parameters_file $topath/set_parameters.jl
chmod g+rw $topath/set_parameters.jl

# create a probably-unique job name
jobname=$(cat /dev/urandom | tr -dc 'a-zA-Z' | head -c 7)
echo jobname = $jobname >> ${topath}/logs/project.log

cmd="umask 002;
     date;
     hostname;
     $JULIA ${RENDER_PATH}/src/render/src/project1.jl ${topath}/set_parameters.jl \$LSB_JOBINDEX;
     date"
echo $cmd &>> ${topath}/logs/project.log
nface_leafs=$((4**nlevels))
if [ $which_cluster == 'janelia' ]; then
  echo $cmd | bsub -P $bill_userid \
        -J ${jobname}1[1-$nface_leafs]%$throttle \
        -n 2 \
        -o ${topath}/logs/project%I.log
else
  pcmd="export RENDER_PATH=$RENDER_PATH;
        export JULIA=$JULIA;
        export JULIA_PROJECT=$JULIA_PROJECT;
        export HOSTNAME=$HOSTNAME;
        export LSB_JOBINDEX={};
        $cmd &> ${topath}/logs/project{}.log"
  parallel -S $which_cluster $pcmd ::: `seq 1 $nface_leafs` &>> ${topath}/logs/project.log
fi

cmd="umask 002;
     date;
     hostname;
     $JULIA ${RENDER_PATH}/src/render/src/project2.jl ${topath}/set_parameters.jl;
     date"
echo $cmd &>> ${topath}/logs/project.log
if [ $which_cluster == 'janelia' ]; then
  echo $cmd | bsub -P $bill_userid \
        -J ${jobname}2 \
        -n 4 \
        -W 60 -o ${topath}/logs/project.log \
        -w ${jobname}1
else
  eval $cmd &>> ${topath}/logs/project.log
fi

if [ $delete_scratch == 'yes' ]; then
  cmd="umask 002;
       date;
       hostname;
       du -sh ${topath}/tiles;
       echo deleting scratch = ${topath}/tiles;
       rm -rf ${topath}/tiles;
       date"
  echo $cmd &>> ${topath}/logs/project.log
  if [ $which_cluster == 'janelia' ]; then
    echo $cmd | bsub -P $bill_userid \
          -J ${jobname}3 \
          -W 60 -o ${topath}/logs/project.log \
          -w ${jobname}2
  else
    eval $cmd &>> ${topath}/logs/project.log
  fi
  dependency=3
else
  dependency=2
fi

# tar log files
cmd="date;
     hostname;
     echo tar\'ing log files in ${topath}/logs;
     cd ${topath}/logs;
     tar czf ${topath}/logs.tar.gz *log;
     echo deleting ${topath}/logs;
     rm -rf ${topath}/logs;
     date"
echo $cmd &>> ${topath}/logs/project.log
if [ $which_cluster == 'janelia' ]; then
  echo $cmd | bsub -P $bill_userid -J ${jobname}4 \
        -w "done(${jobname}${dependency})" \
        -o ${topath}/tar.log
else
  eval $cmd &> ${topath}/tar.log
fi
